name: Secure RDP Setup

on:
  workflow_dispatch:

jobs:
  secure-rdp:
    runs-on: windows-latest
    timeout-minutes: 60

    steps:
      - name: Setup RDP and Tailscale
        shell: pwsh
        run: |
          Write-Host "üöÄ Starting RDP configuration..."

          # === Step 1: Configure User & Password ===
          $username = "runneradmin"
          $password = "${{ secrets.RDP_PASSWORD }}"

          if ([string]::IsNullOrWhiteSpace($password)) {
              throw "‚ùå Missing RDP_PASSWORD secret. Please set it in GitHub ‚Üí Settings ‚Üí Secrets ‚Üí Actions."
          }

          try {
              if (Get-LocalUser -Name $username -ErrorAction SilentlyContinue) {
                  Write-Host "User '$username' exists ‚Äî updating password."
                  $securePass = ConvertTo-SecureString $password -AsPlainText -Force
                  Set-LocalUser -Name $username -Password $securePass
              } else {
                  Write-Host "Creating user '$username'..."
                  $securePass = ConvertTo-SecureString $password -AsPlainText -Force
                  New-LocalUser -Name $username -Password $securePass -AccountNeverExpires -Description "RDP user for GitHub Actions"
              }

              Add-LocalGroupMember -Group "Remote Desktop Users" -Member $username
              Write-Host "‚úÖ User '$username' configured successfully."
          } catch {
              Write-Host "‚ö†Ô∏è Failed to configure user: $($_.Exception.Message)"
              exit 1
          }

          # === Step 2: Enable Remote Desktop ===
          Write-Host "üñ•Ô∏è Enabling Remote Desktop..."
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
          Write-Host "‚úÖ Remote Desktop enabled."

          # === Step 3: Install Tailscale ===
          Write-Host "üåê Installing Tailscale..."
          choco install tailscale -y | Out-Null

          $authKey = "${{ secrets.TAILSCALE_AUTH_KEY }}"
          if ([string]::IsNullOrWhiteSpace($authKey)) {
              throw "‚ùå Missing TAILSCALE_AUTH_KEY secret. Please set it in GitHub ‚Üí Settings ‚Üí Secrets ‚Üí Actions."
          }

          Write-Host "üîë Logging in to Tailscale..."
          & "$env:ProgramFiles\Tailscale\tailscale.exe" logout | Out-Null
          & "$env:ProgramFiles\Tailscale\tailscale.exe" up --authkey=$authKey --hostname="GitHubRDP" --accept-routes

          # === Step 4: Wait for Tailscale IP ===
          Write-Host "üîé Checking Tailscale IP..."
          $tsIP = $null
          $retries = 0
          while (-not $tsIP -and $retries -lt 12) {
              Start-Sleep -Seconds 5
              try {
                  $tsIP = (& "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4).Trim()
              } catch { }
              $retries++
          }

          if (-not $tsIP) {
              Write-Host "‚ùå Failed to get Tailscale IP. Check your AUTH KEY validity."
              & "$env:ProgramFiles\Tailscale\tailscale.exe" status
              exit 1
          }

          Write-Host "‚úÖ Tailscale Connected! IP Address: $tsIP"

          # === Step 5: Display Connection Info ===
          Write-Host ""
          Write-Host "=============================="
          Write-Host "‚úÖ RDP Setup Complete!"
          Write-Host "Username: $username"
          Write-Host "Password: (hidden, see GitHub Secrets)"
          Write-Host "Tailscale IP: $tsIP"
          Write-Host "=============================="
          Write-Host ""
          Write-Host "üí° Connect using Remote Desktop ‚Üí $tsIP"
